[{"/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/index.js":"1","/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/components/RecentTrends.js":"2","/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/components/DecadeTop.js":"3","/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/components/Header.js":"4","/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/App.js":"5","/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/components/DecadeOneTrend.js":"6","/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/components/OneTermTrend.js":"7"},{"size":218,"mtime":1607808269037,"results":"8","hashOfConfig":"9"},{"size":5171,"mtime":1607808269023,"results":"10","hashOfConfig":"9"},{"size":32826,"mtime":1607827803099,"results":"11","hashOfConfig":"9"},{"size":1434,"mtime":1607808269023,"results":"12","hashOfConfig":"9"},{"size":1819,"mtime":1607828411669,"results":"13","hashOfConfig":"9"},{"size":4155,"mtime":1607828602011,"results":"14","hashOfConfig":"9"},{"size":7554,"mtime":1607828359471,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ie5lpu",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/index.js",[],["33","34"],"/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/components/RecentTrends.js",["35","36","37"],"/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/components/DecadeTop.js",["38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81"],"/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/components/Header.js",["82","83","84"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Typography, Button, Toolbar, IconButton } from \"@material-ui/core\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <React.Fragment>\n      <Toolbar className={classes.toolbar}>\n        <a href=\"https://trends.google.com/trends/?geo=US\" target=\"_blank\">\n          <Button size=\"small\">Google Trends</Button>\n        </a>\n        <Typography\n          component=\"h3\"\n          variant=\"h5\"\n          className={classes.toolbarTitle}\n        >\n          TRENDING VIS\n        </Typography>\n        <a href=\"https://github.com/rosie-123/Trending-vis\" target=\"_blank\">\n          <IconButton>\n            <DescriptionIcon />\n          </IconButton>\n        </a>\n        <a href=\"https://github.com/rosie-123/Trending-vis\" target=\"_blank\">\n          <IconButton>\n            <GitHubIcon />\n          </IconButton>\n        </a>\n      </Toolbar>\n    </React.Fragment>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: \"space-between\",\n    overflowX: \"auto\",\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n}));\nexport default Header;\n","/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/App.js",[],"/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/components/DecadeOneTrend.js",["85","86","87","88","89","90"],"/Users/Shelly/Fall2020/CS639/final/Google-Trending-Vis/client/src/components/OneTermTrend.js",["91","92","93","94","95"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n} from \"@material-ui/core\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\n\nconst OneTermTrend = ({ term }) => {\n  const [queryTerm, setQueryTerm] = useState(term);\n  const [data, setData] = useState([]);\n  const [termA, setTermA] = useState(\"\");\n  const [termB, setTermB] = useState(\"\");\n  const [comparisonData, setComparisonData] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    // if (term !== queryTerm) {\n    //   setQueryTerm(term);\n    // }\n    const aggregatedData = [];\n    fetch(`http://localhost:9000/term/?term=${queryTerm}`)\n      .then((res) => res.json())\n      .then((res) => {\n        res.map((entry) => {\n          if (entry[\"hasData\"][0]) {\n            const singleEntry = {\n              time: entry[\"formattedAxisTime\"],\n              \"search volume\":\n                entry[\"formattedValue\"][0] === NaN\n                  ? \"NaN\"\n                  : Number(entry[\"formattedValue\"][0]),\n            };\n            aggregatedData.push(singleEntry);\n          }\n        });\n      })\n      .then(() => setData(aggregatedData));\n  }, [term, queryTerm]);\n  useEffect(() => {\n    if (term !== queryTerm) {\n      setQueryTerm(term);\n    }\n  }, [term]);\n  const keyPress = (e) => {\n    if (e.key === \"Enter\") {\n      console.log(e.target.value);\n      setQueryTerm(e.target.value);\n    }\n  };\n  const fetchComparison = () => {\n    const comparison = [];\n    fetch(`http://localhost:9000/compare/?termA=${termA}&termB=${termB}`)\n      .then((res) => res.json())\n      .then((res) =>\n        res.map((entry) => {\n          if (entry[\"hasData\"][0] && entry[\"hasData\"][1]) {\n            const singleEntry = {\n              time: entry[\"formattedAxisTime\"],\n            };\n            singleEntry[termA] = entry[\"value\"][0];\n            singleEntry[termB] = entry[\"value\"][1];\n            comparison.push(singleEntry);\n          }\n        })\n      )\n      .then(() => setComparisonData(comparison));\n  };\n  const handleReset = () => {\n    setTermA(\"\");\n    setTermB(\"\");\n  };\n  return (\n    <div className={classes.root}>\n      <Card>\n        {console.log(\"data\", data)}\n        <CardHeader\n          title=\"Interest Over Time\"\n          titleTypographyProps={{ variant: \"h6\" }}\n          subheader=\"Given a single term, what is the interest of the term over 2020? Select from the word cloud or query below!\"\n        />\n        <CardContent>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              type=\"text\"\n              placeholder=\"Example: Black Friday\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onKeyPress={keyPress}\n            />\n          </div>\n          <Typography variant=\"subtitle2\" className={classes.subtitle}>\n            Current Search Term{\" \"}\n            <span className={classes.queryTerm}>\n              {\"[ \"}\n              {queryTerm}\n              {\" ]\"}\n            </span>\n          </Typography>\n          <div className={classes.chartArea}>\n            <ResponsiveContainer width=\"100%\" height={325}>\n              <LineChart\n                width={800}\n                height={400}\n                data={data}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n              >\n                <XAxis dataKey=\"time\" />\n                <YAxis />\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <Tooltip />\n                <Legend />\n                <Line\n                  connectNulls={true}\n                  type=\"monotone\"\n                  dataKey=\"search volume\"\n                  stroke=\"#8884d8\"\n                  activeDot={{ r: 8 }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n            <Typography variant=\"subtitle2\" className={classes.subtitle}>\n              * Note that the y-axis indicates the relative search volumn which\n              has normalized into the interval [1, 100] other than its\n              real-world search volumn\n            </Typography>\n          </div>\n        </CardContent>\n        <CardHeader\n          title=\"Compare a pair of terms\"\n          titleTypographyProps={{ variant: \"h6\" }}\n          subheader=\"Looking for something to compare? Specify two terms and compare their trending over the year\"\n        />\n        <CardContent>\n          <form className={classes.formRoot} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"standard-basic\"\n              label=\"Term A\"\n              onChange={(event) => setTermA(event.target.value)}\n            />\n            <TextField\n              id=\"standard-basic\"\n              label=\"Term B\"\n              onChange={(event) => setTermB(event.target.value)}\n            />\n            <Button\n              variant=\"outlined\"\n              color=\"primary\"\n              onClick={() => fetchComparison()}\n            >\n              Confirm\n            </Button>\n            <Button variant=\"outlined\" onClick={() => handleReset()}>\n              Reset\n            </Button>\n          </form>\n          {termA === \"\" && termB === \"\" ? (\n            <p>You haven't add a pair to compare yet!</p>\n          ) : (\n            <div className={classes.chartArea}>\n              <ResponsiveContainer width=\"100%\" height={325}>\n                <LineChart\n                  width={800}\n                  height={400}\n                  data={comparisonData}\n                  margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n                >\n                  <XAxis dataKey=\"time\" />\n                  <YAxis />\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <Tooltip />\n                  <Legend />\n                  <Line\n                    connectNulls={true}\n                    type=\"monotone\"\n                    dataKey={termA}\n                    stroke=\"#8884d8\"\n                  />\n                  <Line\n                    connectNulls={true}\n                    type=\"monotone\"\n                    dataKey={termB}\n                    stroke=\"#82ca9d\"\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"2.5em\",\n    maxHeight: \"55%\",\n    minHeight: \"55%\",\n    maxWidth: \"40%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  search: {\n    display: \"flex\",\n    border: \"1px solid grey\",\n    borderRadius: \"0.8rem\",\n    // marginLeft: \"1rem\",\n    // marginRight: \"1rem\",\n    marginBottom: \"1rem\",\n  },\n  searchIcon: {\n    margin: \"0.4em\",\n  },\n  inputInput: {\n    marginLeft: \"0.2em\",\n  },\n  queryTerm: {\n    color: \"#c75200\",\n    fontWeight: 800,\n  },\n  subtitle: {\n    marginTop: \"0.5rem\",\n    marginBottom: \"0.5rem\",\n  },\n  formRoot: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    display: \"flex\",\n  },\n}));\nexport default OneTermTrend;",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":49,"column":6,"nodeType":"102","endLine":49,"endColumn":8,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":99,"column":13,"nodeType":"106","messageId":"107","endLine":99,"endColumn":21},{"ruleId":"104","severity":1,"message":"108","line":101,"column":13,"nodeType":"106","messageId":"107","endLine":101,"endColumn":17},{"ruleId":"104","severity":1,"message":"109","line":1,"column":27,"nodeType":"106","messageId":"107","endLine":1,"endColumn":36},{"ruleId":"104","severity":1,"message":"110","line":5,"column":10,"nodeType":"106","messageId":"107","endLine":5,"endColumn":20},{"ruleId":"111","severity":1,"message":"112","line":79,"column":20,"nodeType":"113","messageId":"114","endLine":79,"endColumn":22},{"ruleId":"115","severity":1,"message":"116","line":166,"column":184,"nodeType":"117","endLine":166,"endColumn":199},{"ruleId":"115","severity":1,"message":"116","line":199,"column":210,"nodeType":"117","endLine":199,"endColumn":225},{"ruleId":"115","severity":1,"message":"116","line":199,"column":468,"nodeType":"117","endLine":199,"endColumn":483},{"ruleId":"115","severity":1,"message":"116","line":202,"column":279,"nodeType":"117","endLine":202,"endColumn":294},{"ruleId":"115","severity":1,"message":"116","line":205,"column":268,"nodeType":"117","endLine":205,"endColumn":283},{"ruleId":"115","severity":1,"message":"116","line":205,"column":648,"nodeType":"117","endLine":205,"endColumn":663},{"ruleId":"115","severity":1,"message":"116","line":235,"column":138,"nodeType":"117","endLine":235,"endColumn":153},{"ruleId":"115","severity":1,"message":"116","line":235,"column":402,"nodeType":"117","endLine":235,"endColumn":417},{"ruleId":"115","severity":1,"message":"116","line":238,"column":210,"nodeType":"117","endLine":238,"endColumn":225},{"ruleId":"115","severity":1,"message":"116","line":238,"column":577,"nodeType":"117","endLine":238,"endColumn":592},{"ruleId":"115","severity":1,"message":"116","line":269,"column":173,"nodeType":"117","endLine":269,"endColumn":188},{"ruleId":"115","severity":1,"message":"116","line":269,"column":556,"nodeType":"117","endLine":269,"endColumn":571},{"ruleId":"115","severity":1,"message":"116","line":269,"column":831,"nodeType":"117","endLine":269,"endColumn":846},{"ruleId":"115","severity":1,"message":"116","line":272,"column":231,"nodeType":"117","endLine":272,"endColumn":246},{"ruleId":"115","severity":1,"message":"116","line":303,"column":177,"nodeType":"117","endLine":303,"endColumn":192},{"ruleId":"115","severity":1,"message":"116","line":303,"column":393,"nodeType":"117","endLine":303,"endColumn":408},{"ruleId":"115","severity":1,"message":"116","line":306,"column":216,"nodeType":"117","endLine":306,"endColumn":231},{"ruleId":"115","severity":1,"message":"116","line":309,"column":184,"nodeType":"117","endLine":309,"endColumn":199},{"ruleId":"115","severity":1,"message":"116","line":309,"column":399,"nodeType":"117","endLine":309,"endColumn":414},{"ruleId":"115","severity":1,"message":"116","line":309,"column":702,"nodeType":"117","endLine":309,"endColumn":717},{"ruleId":"115","severity":1,"message":"116","line":340,"column":125,"nodeType":"117","endLine":340,"endColumn":140},{"ruleId":"115","severity":1,"message":"116","line":340,"column":370,"nodeType":"117","endLine":340,"endColumn":385},{"ruleId":"115","severity":1,"message":"116","line":340,"column":767,"nodeType":"117","endLine":340,"endColumn":782},{"ruleId":"115","severity":1,"message":"116","line":343,"column":301,"nodeType":"117","endLine":343,"endColumn":316},{"ruleId":"115","severity":1,"message":"116","line":343,"column":610,"nodeType":"117","endLine":343,"endColumn":625},{"ruleId":"115","severity":1,"message":"116","line":374,"column":340,"nodeType":"117","endLine":374,"endColumn":355},{"ruleId":"115","severity":1,"message":"116","line":377,"column":127,"nodeType":"117","endLine":377,"endColumn":142},{"ruleId":"115","severity":1,"message":"116","line":377,"column":343,"nodeType":"117","endLine":377,"endColumn":358},{"ruleId":"115","severity":1,"message":"116","line":412,"column":182,"nodeType":"117","endLine":412,"endColumn":197},{"ruleId":"115","severity":1,"message":"116","line":412,"column":418,"nodeType":"117","endLine":412,"endColumn":433},{"ruleId":"115","severity":1,"message":"116","line":415,"column":162,"nodeType":"117","endLine":415,"endColumn":177},{"ruleId":"115","severity":1,"message":"116","line":415,"column":402,"nodeType":"117","endLine":415,"endColumn":417},{"ruleId":"115","severity":1,"message":"116","line":446,"column":367,"nodeType":"117","endLine":446,"endColumn":382},{"ruleId":"115","severity":1,"message":"116","line":449,"column":139,"nodeType":"117","endLine":449,"endColumn":154},{"ruleId":"115","severity":1,"message":"116","line":480,"column":155,"nodeType":"117","endLine":480,"endColumn":170},{"ruleId":"115","severity":1,"message":"116","line":480,"column":400,"nodeType":"117","endLine":480,"endColumn":415},{"ruleId":"115","severity":1,"message":"116","line":480,"column":699,"nodeType":"117","endLine":480,"endColumn":714},{"ruleId":"115","severity":1,"message":"116","line":483,"column":280,"nodeType":"117","endLine":483,"endColumn":295},{"ruleId":"115","severity":1,"message":"116","line":483,"column":613,"nodeType":"117","endLine":483,"endColumn":628},{"ruleId":"115","severity":1,"message":"116","line":483,"column":903,"nodeType":"117","endLine":483,"endColumn":918},{"ruleId":"115","severity":1,"message":"116","line":483,"column":1204,"nodeType":"117","endLine":483,"endColumn":1219},{"ruleId":"115","severity":1,"message":"116","line":12,"column":60,"nodeType":"117","endLine":12,"endColumn":75},{"ruleId":"115","severity":1,"message":"116","line":22,"column":61,"nodeType":"117","endLine":22,"endColumn":76},{"ruleId":"115","severity":1,"message":"116","line":27,"column":61,"nodeType":"117","endLine":27,"endColumn":76},{"ruleId":"104","severity":1,"message":"118","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"119","line":4,"column":8,"nodeType":"106","messageId":"107","endLine":4,"endColumn":17},{"ruleId":"104","severity":1,"message":"120","line":5,"column":8,"nodeType":"106","messageId":"107","endLine":5,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":34,"column":25,"nodeType":"123","messageId":"124","endLine":34,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":39,"column":17,"nodeType":"127","messageId":"128","endLine":39,"endColumn":51},{"ruleId":"100","severity":1,"message":"129","line":48,"column":6,"nodeType":"102","endLine":48,"endColumn":23,"suggestions":"130"},{"ruleId":"104","severity":1,"message":"118","line":9,"column":10,"nodeType":"106","messageId":"107","endLine":9,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":39,"column":25,"nodeType":"123","messageId":"124","endLine":39,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":44,"column":17,"nodeType":"127","messageId":"128","endLine":44,"endColumn":51},{"ruleId":"100","severity":1,"message":"131","line":58,"column":6,"nodeType":"102","endLine":58,"endColumn":12,"suggestions":"132"},{"ruleId":"121","severity":1,"message":"122","line":70,"column":25,"nodeType":"123","messageId":"124","endLine":70,"endColumn":27},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initStr'. Either include it or remove the dependency array.","ArrayExpression",["135"],"no-unused-vars","'isActive' is assigned a value but never used.","Identifier","unusedVar","'text' is assigned a value but never used.","'useEffect' is defined but never used.","'TabContext' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'fade' is defined but never used.","'InputBase' is defined but never used.","'SearchIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","React Hook useEffect has missing dependencies: 'date' and 'queryDate'. Either include them or remove the dependency array. If 'setQueryDate' needs the current value of 'date', you can also switch to useReducer instead of useState and read 'date' in the reducer.",["136"],"React Hook useEffect has a missing dependency: 'queryTerm'. Either include it or remove the dependency array.",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [initStr]",{"range":"144","text":"145"},"Update the dependencies array to be: [date, queryDate, queryTerm, term]",{"range":"146","text":"147"},"Update the dependencies array to be: [queryTerm, term]",{"range":"148","text":"149"},[1620,1622],"[initStr]",[1413,1430],"[date, queryDate, queryTerm, term]",[1601,1607],"[queryTerm, term]"]
